class VulnerabilityChecker:
    """Collects and classifies vulnerabilities."""

    def __init__(self):
        self.vulns = []

    def add_results(self, results):
        for r in results:
            if r.get("vulnerable"):
                self.vulns.append(r)

    def stats(self):
        levels = ["CRITICAL", "HIGH", "MEDIUM", "LOW", "INFO"]
        counts = {lvl: 0 for lvl in levels}
        for v in self.vulns:
            counts[v.get("severity", "INFO")] += 1
        return {"total": len(self.vulns), "by_severity": counts}

    def recommendations(self):
        recs = []
        for v in self.vulns:
            name = v.get("test_name", "")
            if "SQL" in name: recs.append("Use parameterized queries.")
            elif "XSS" in name: recs.append("Sanitize and encode outputs.")
            elif "Auth" in name: recs.append("Enforce strong authentication.")
            elif "Header" in name: recs.append("Add recommended HTTP security headers.")
        return list(set(recs))
